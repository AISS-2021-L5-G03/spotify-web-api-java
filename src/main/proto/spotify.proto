package spotify;

option java_package = "se.michaelthelin.spotify";
option java_outer_classname = "SpotifyProtos";

message Album {
    optional AlbumType album_type = 1;
    repeated SimpleArtist artists = 2;
    repeated string available_markets = 3;
    optional ExternalIds external_ids = 4;
    optional ExternalUrls external_urls = 5;
    repeated string genres = 6;
    optional string href = 7;
    optional string id = 8;
    repeated Image images = 9;
    optional string name = 10;
    optional int32 popularity = 11;
    optional ReleaseDate release_date = 12;
    repeated SimpleTrack tracks = 13;
    optional string type = 14 [default = "album"];
    optional string uri = 15;
}

message SimpleAlbum {
    optional AlbumType album_type = 1;
    optional ExternalUrls external_urls = 2;
    optional string href = 3;
    optional string id = 4;
    repeated Image images = 5;
    optional string name = 6;
    optional string type = 7 [default = "album"];
    optional string uri = 8;
}

message Artist {
    optional ExternalUrls external_urls = 1;
    repeated string genres = 2;
    optional string href = 3;
    optional string id = 4;
    repeated Image images = 5;
    optional string name = 6;
    optional int32 popularity = 7;
    optional string type = 8 [default = "artist"];
    optional string uri = 9;
}

message SimpleArtist {
    optional ExternalUrls external_urls = 1;
    optional string href = 2;
    optional string id = 3;
    optional string name = 4;
    optional string type = 5 [default = "artist"];
    optional string uri = 6;
}

message Error {
    optional string description = 1;
    optional string type = 2;
}

message ExternalIds {
    optional string isrc = 1;
    optional string ean = 2;
    optional string upc = 3;
}

message ExternalUrls {
    optional string spotify = 1;
}

message Image {
    optional int32 height = 1;
    optional string url = 2;
    optional int32 width = 3;
}

message Playlist {
    optional bool collaborative = 1;
    optional string description = 2;
    optional ExternalUrls external_urls = 3;
    optional int32 followers_count = 4;
    optional string href = 5;
    optional string id = 6;
    optional Image images = 7;
    optional User owner = 8;
    optional string name = 9;
    optional bool public = 10;
    optional int32 tracks_count = 11;
    optional string type = 12 [default = "playlist"];
    optional string uri = 13;
}

message ReleaseDate {
    optional int32 year = 1;
    optional int32 month = 2;
    optional int32 date = 3;
}

message Track {
    optional SimpleAlbum album = 1;
    repeated SimpleArtist artists = 2;
    repeated string available_markets = 3;
    optional int32 disc_number = 4;
    optional int32 duration_ms = 5;
    optional bool explicit = 6;
    repeated ExternalIds external_ids = 7;
    repeated ExternalUrls external_urls = 8;
    optional string href = 9;
    optional string id = 10;
    optional string name = 11;
    optional int32 popularity = 12;
    optional string preview_url = 13;
    optional int32 track_number = 14;
    optional string type = 15;
    optional string uri = 16;
}

message SimpleTrack {
    repeated SimpleArtist artists = 1;
    optional int32 disc_number = 2;
    optional int32 duration_ms = 3;
    optional bool explicit = 4;
    repeated ExternalUrls external_urls = 5;
    optional string href = 6;
    optional string id = 7;
    optional string name = 8;
    optional string preview_url = 9;
    optional int32 track_number = 10;
    optional string type = 11;
    optional string uri = 12;
}

message User {
    optional string display_name = 1;
    optional string email = 2;
    optional ExternalUrls external_urls = 3;
    optional string href = 4;
    optional string id = 5;
    optional Image image = 6;
    optional string product = 7;
    optional string type = 8 [default = "user"];
    optional string uri = 9;
}

message AlbumPage {
    optional string href = 1;
    repeated Album items = 2;
    optional int32 limit = 3 [default = 20];
    optional string next = 4;
    optional int32 offset = 5 [default = 0];
    optional string previous = 6;
    optional int32 total = 7;
}

message ArtistPage {
    optional string href = 1;
    repeated Artist items = 2;
    optional int32 limit = 3 [default = 20];
    optional string next = 4;
    optional int32 offset = 5 [default = 0];
    optional string previous = 6;
    optional int32 total = 7;
}

message TrackPage {
    optional string href = 1;
    repeated Track items = 2;
    optional int32 limit = 3 [default = 20];
    optional string next = 4;
    optional int32 offset = 5 [default = 0];
    optional string previous = 6;
    optional int32 total = 7;
}

enum AlbumType {
    album = 0;
    single = 1;
    compilation = 2;
}